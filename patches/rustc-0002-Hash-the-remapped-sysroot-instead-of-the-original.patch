From 6e13842c28f5852c4d84c509302445ce1861ab02 Mon Sep 17 00:00:00 2001
From: Joel Galenson <jgalenson@google.com>
Date: Wed, 17 Jul 2019 08:43:17 -0700
Subject: [PATCH] Hash the remapped sysroot instead of the original.

One of the reasons that rustc builds are not reproducible is because
the --sysroot path is dependent on the current directory.  We can fix
this by hashing the remapped sysroot instead of the original when
applicable.

Note that this is not completely correct, as the hash can stay the
same if both the sysroot and the remapped path change.  However, it at
least should serve as a proof of concept.
---
 src/librustc/session/config.rs | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/librustc/session/config.rs b/src/librustc/session/config.rs
index b5e3c4cda0..495fd35000 100644
--- a/src/librustc/session/config.rs
+++ b/src/librustc/session/config.rs
@@ -397,7 +397,8 @@ top_level_options!(
         output_types: OutputTypes [TRACKED],
         search_paths: Vec<SearchPath> [UNTRACKED],
         libs: Vec<(String, Option<String>, Option<cstore::NativeLibraryKind>)> [TRACKED],
-        maybe_sysroot: Option<PathBuf> [TRACKED],
+        maybe_sysroot: Option<PathBuf> [UNTRACKED],
+        maybe_sysroot_remapped: Option<PathBuf> [TRACKED],
 
         target_triple: TargetTriple [TRACKED],
 
@@ -608,6 +609,7 @@ impl Default for Options {
             output_types: OutputTypes(BTreeMap::new()),
             search_paths: vec![],
             maybe_sysroot: None,
+            maybe_sysroot_remapped: None,
             target_triple: TargetTriple::from_triple(host_triple()),
             test: false,
             incremental: None,
@@ -2383,7 +2385,7 @@ pub fn build_session_options_and_crate_config(
 
     let crate_name = matches.opt_str("crate-name");
 
-    let remap_path_prefix = matches
+    let remap_path_prefix: Vec<(PathBuf, PathBuf)> = matches
         .opt_strs("remap-path-prefix")
         .into_iter()
         .map(|remap| {
@@ -2400,6 +2402,10 @@ pub fn build_session_options_and_crate_config(
         })
         .collect();
 
+    let sysroot_remapped_opt = sysroot_opt
+        .clone()
+        .map(|sysroot| FilePathMapping::new(remap_path_prefix.clone()).map_prefix(sysroot).0);
+
     (
         Options {
             crate_types,
@@ -2411,6 +2417,7 @@ pub fn build_session_options_and_crate_config(
             output_types: OutputTypes(output_types),
             search_paths,
             maybe_sysroot: sysroot_opt,
+            maybe_sysroot_remapped: sysroot_remapped_opt,
             target_triple,
             test,
             incremental,
-- 
2.22.0.510.g264f2c817a-goog

